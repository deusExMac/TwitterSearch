[General]

; Total maximum number of Tweets to fetch. -1 for unlimited
; TODO: not used in this version
maxTweets = 4000

; Total maximum number of Tweets to fetch during each from-to period
; -1 for unlimited
maxTweetsPerPeriod = 14

; Default language of Tweets, if not explicitly specified with lang in the query
; Not used in this version
defaultLang = el


; How many download speeds to
; keep in our queue to calculate the average speed
downloadSpeedWindow = 150

; Github repository of TwitterSearch.
; NOTE: url MUST contain scheme/protocol (i.e. http or https). Otherwise
; webbrowser.open() does not seem to work.
githuburl = https://github.com/deusExMac/TwitterSearch


[Network]

; Timeout for connecting (in seconds)
; Set to negative or zero if no timeout is desired
netConnectTimeout = 6.9

; Timeout for reading response (in seconds)
; Set to negative or zero if no timeout is desired
netReadTimeout = 10.5




[TwitterAPI]


; Two values supported: historic and recent
; IMPORTANT: Make sure to get the proper Bearer token in order for this option
; to work correctly.
targetArchive = historic


;
; Recent archive use: https://api.twitter.com/2/tweets/search/recent
; Historic archive use: https://api.twitter.com/2/tweets/search/all
;
;apiEndPoint = https://api.twitter.com/2/tweets/search/recent

recentApiEndPoint = https://api.twitter.com/2/tweets/search/recent
historicApiEndPoint = https://api.twitter.com/2/tweets/search/all

; The actual Endpoint that will be used
apiEndPoint = https://api.twitter.com/2/tweets/search/recent


;
; bearer tokens, for Essential and Academic access.
; IMPORTANT: Get an essential or academic bearer token and set it as value
; for the proper variable. 
; In order to get a bearer token, you need a Twitter developer account. Instructions
; on how to get a developer account for free, see:
; https://developer.twitter.com/en/support/twitter-api/developer-account
;

essentialBearer = gAAAAABiU859EO8BlsudvTJG2vUjxsQDq5vhIroBpJDxzhqJIdLSZPurzbZB7-QrJdqyQt1wgHTt229D5zTg0FICIoxppuLWooO18PfeFeLM7HcXC2EPcHN1Yo7A2uzUL0OLUdcV5UrO0QriLIn_wk53tlR2WS6c8Rl2bpNOWxcaz1qTdvzQmF817qmDTDXxcbD_jiHqr-pjixTY72tttStMuPnU7RoBTHwVddVs5Mk1c3ker0t7bS4=
academicBearer = gAAAAABiU859L5wAviWYm48l4EgKBQBmTn1I9l4bDLfFS9u5N3GAX72-djX_0FBwWoR5Kw_S9PILDjfv33kVhtxYFf5M2gsCTHnuwLC6c66lqANj7gb5YoiYh4j_imaKoU-3PbMHUSv59YJr-Qz4H_6rPhoQI_27MkIhfb-kC9Ucb3F6S5gGONQ44eVSwTwOB8B8tAUKzHuZTfrxv3NzMyr0OPyuSCn1ferlLMFD8ycANcN-1n_RmHo=

; The bearer token that will be actually used during requests. 
; During startup, this value is set automatically based on the value of
; setting targetArchive: if targetArchive has value recent, essentialBearer token
; is used; if targetArchive has value historic, academicBearer token will be used.
Bearer = XXXXX



; IMPORTANT! if bearerEncrypted is set to true, the values
; of settings essentialBearer and academicBearer in this config file
; are consiredered to be encrypted. In order to be used, they must
; be decrypted first.
bearerEncrypted = true

; path to file containing the encryption/decryption key.
; Used to decrypt encrypted bearer tokens
encryptionKeyFile = etc/enc.key


; Number of tweets to ask for from Twitter v2 endpoint
maxEndpointTweets = 72 

;
; Which fields to request.
; For more details on fields see:
; https://developer.twitter.com/en/docs/twitter-api/fields
; https://developer.twitter.com/en/docs/twitter-api/data-dictionary/using-fields-and-expansions
;
; Data dictionaries for Twitter's object model can be found here:
; https://developer.twitter.com/en/docs/twitter-api/data-dictionary/object-model/user
; https://developer.twitter.com/en/docs/twitter-api/data-dictionary/object-model/tweet
; https://developer.twitter.com/en/docs/twitter-api/data-dictionary/object-model/place
;
tweet.fields = id,text,author_id,in_reply_to_user_id,geo,conversation_id,created_at,lang,public_metrics,referenced_tweets,reply_settings,source
user.fields = id,name,username,created_at,description,public_metrics,verified
place.fields = full_name,id,country,country_code,geo,name,place_type
expansions = author_id,in_reply_to_user_id,geo.place_id



[Request]
; Time to sleep between two consecutive requests (in seconds)
sleepTime = 5.12




[Storage]

;currently only csv supported
format = csv 

;Which metadata to store for each tweet
; TODO: Not used. DEPRECATED.
twitterFields = 

; csv separator
csvSeparator = ;

; csv file to store tweets
csvFile = tweets.csv

;Type of tweets to exclude.
;supported types: retweeted,replied_to, quoted
;NOTE: separate with comma, don't add spaces between comma and type i.e. write a,b and not a,  b
;Not used in this version
excludeTweetsType = 


[Shell]
historySize = 125
commandPrompt = TwitterSearch >>



[Debug]
debugMode = false

; If false, only a dot is displayed signaling that tweets were received.
; If true, displays some metrics in the form of k/l/m/n where
; k number of tweets to aske from endpoint during a single request
; l number of tweets actually stored,
; m total number of tweets stored in this period and n download speed in tweets per seconds.
showProgress = true

; not supported in this version
saveJsonResponses = true

; not supported in this version
logFile = twitterSearch.log


